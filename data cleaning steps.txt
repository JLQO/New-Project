let
    Source = Csv.Document(File.Contents("C:\Users\coolb\Downloads\Uncleaned_DS_jobs.csv"),[Delimiter=",", Columns=15, Encoding=65001, QuoteStyle=QuoteStyle.Csv]),
    #"Promoted Headers" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),
    #"Changed Type" = Table.TransformColumnTypes(#"Promoted Headers",{{"index", Int64.Type}, {"Job Title", type text}, {"Salary Estimate", type text}, {"Job Description", type text}, {"Rating", type number}, {"Company Name", type text}, {"Location", type text}, {"Headquarters", type text}, {"Size", type text}, {"Founded", Int64.Type}, {"Type of ownership", type text}, {"Industry", type text}, {"Sector", type text}, {"Revenue", type text}, {"Competitors", type text}}),
    #"Extracted Text Before Delimiter" = Table.TransformColumns(#"Changed Type", {{"Salary Estimate", each Text.BeforeDelimiter(_, "("), type text}}),
    #"Inserted Literal" = Table.AddColumn(#"Extracted Text Before Delimiter", "Literal", each "101", type text),
    #"Renamed Columns" = Table.RenameColumns(#"Inserted Literal",{{"Literal", "Min Sal"}}),
    #"Duplicated Column" = Table.AddColumn(#"Renamed Columns", "Max Sal", each [Min Sal], type text),
    #"Added Custom" = Table.AddColumn(#"Duplicated Column", "Role Type", each if Text.Contains([Job Title], "Data Scientist") then
"Data Scientist"
else if Text.Contains([Job Title], "Data Analyst") then
"Data Analyst"
else if Text.Contains([Job Title], "Data Engineer") then
"Data Engineer"

else if Text.Contains([Job Title], "Machine Learning") then
"Machine Learning Engineer"
else
"other"),
    #"Changed Type1" = Table.TransformColumnTypes(#"Added Custom",{{"Role Type", type text}}),
    #"Added Custom1" = Table.AddColumn(#"Changed Type1", "Location Correction", each if [Location] = "New Jersey" then ", NJ"
else if [Location] = "Remote" then ", other"
else if [Location] = "United States" then ", other"
else if [Location] = "Texas" then ", TX"
else if [Location] = "Patuxent" then ", MA"
else if [Location] = "California" then ", CA"
else if [Location] = "Utah" then ", UT"
else [Location]),
    #"Split Column by Delimiter" = Table.SplitColumn(#"Added Custom1", "Location Correction", Splitter.SplitTextByDelimiter(",", QuoteStyle.Csv), {"Location Correction.1", "Location Correction.2"}),
    #"Changed Type2" = Table.TransformColumnTypes(#"Split Column by Delimiter",{{"Location Correction.1", type text}, {"Location Correction.2", type text}}),
    #"Replaced Value" = Table.ReplaceValue(#"Changed Type2","Anne Rundell","MA",Replacer.ReplaceText,{"Location Correction.2"}),
    #"Renamed Columns1" = Table.RenameColumns(#"Replaced Value",{{"Location Correction.2", "State Abbreviations"}}),
    #"Replaced Value1" = Table.ReplaceValue(#"Renamed Columns1","employees","",Replacer.ReplaceText,{"Size"}),
    #"Filtered Rows" = Table.SelectRows(#"Replaced Value1", each ([Competitors] <> "-1") and ([Industry] <> "-1")),
    #"Split Column by Character Transition" = Table.SplitColumn(#"Filtered Rows", "Company Name", Splitter.SplitTextByCharacterTransition((c) => not List.Contains({"0".."9"}, c), {"0".."9"}), {"Company Name.1", "Company Name.2", "Company Name.3"}),
    #"Removed Columns" = Table.RemoveColumns(#"Split Column by Character Transition",{"Company Name.2", "Company Name.3"}),
    #"Renamed Columns3" = Table.RenameColumns(#"Removed Columns",{{"Company Name.1", "Company Name"}}),
    #"Duplicated Column1" = Table.DuplicateColumn(#"Renamed Columns3", "Size", "Size - Copy"),
    #"Renamed Columns2" = Table.RenameColumns(#"Duplicated Column1",{{"Size - Copy", "size1"}}),
    #"Split Column by Delimiter1" = Table.SplitColumn(#"Renamed Columns2", "size1", Splitter.SplitTextByDelimiter("to", QuoteStyle.Csv), {"size1.1", "size1.2"}),
    #"Changed Type3" = Table.TransformColumnTypes(#"Split Column by Delimiter1",{{"Company Name", type text}, {"size1.1", type text}, {"size1.2", Int64.Type}}),
    #"Renamed Columns4" = Table.RenameColumns(#"Changed Type3",{{"size1.1", "MinCompanySize"}, {"size1.2", "MaxpanySize"}})
in
    #"Renamed Columns4"
